import { ParserOptions, ParserPlugin } from "@babel/parser";

export const astParserPlugins: ParserPlugin[] = [
    ["typescript", { dts: true }],
    ["pipelineOperator", { proposal: "minimal" }],
    "asyncDoExpressions",
    "decimal",
    "decorators-legacy",
    "decoratorAutoAccessors",
    "destructuringPrivate",
    "doExpressions",
    "exportDefaultFrom",
    "functionBind",
    "importAssertions",
    "moduleBlocks",
    "partialApplication",
    "regexpUnicodeSets",
    "throwExpressions",
    "asyncGenerators",
    "bigInt",
    "classProperties",
    "classPrivateProperties",
    "classPrivateMethods",
    "classStaticBlock",
    "dynamicImport",
    "exportNamespaceFrom",
    "functionSent",
    "logicalAssignment",
    "moduleStringNames",
    "nullishCoalescingOperator",
    "numericSeparator",
    "objectRestSpread",
    "optionalCatchBinding",
    "optionalChaining",
    "privateIn",
    "topLevelAwait",
    "jsx",
];

export const astOtherSettings: ParserOptions = {
    sourceType: "module",
    allowImportExportEverywhere: true,
    allowAwaitOutsideFunction: true,
    allowReturnOutsideFunction: true,
    allowSuperOutsideMethod: true,
    allowUndeclaredExports: true,
    errorRecovery: true,
};
